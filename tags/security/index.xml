<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on Mya Pitzeruse</title>
    <link>https://mjpitz.com/tags/security/</link>
    <description>Recent content in security on Mya Pitzeruse</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://mjpitz.com/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Renovate your GitOps</title>
      <link>https://mjpitz.com/blog/2020/12/03/renovate-your-gitops/</link>
      <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mjpitz.com/blog/2020/12/03/renovate-your-gitops/</guid>
      <description>&lt;p&gt;Every engineering organization struggles to stay up to date with the latest versions of applications they run.
When an organization deploys an open source project, their versions start to drift from day one.
The longer a project runs without an update, the more likely it is to contain a vulnerability.
To help applications stay on top of library versions, the project &lt;a href=&#34;https://github.com/renovatebot/&#34;&gt;Renovate&lt;/a&gt; was developed.
Renovate works by parsing manifest files (like &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;go.mod&lt;/code&gt;) and checking for newer versions of libraries.
When Renovate discovers an update, it submits a pull request with the newer version to the project.&lt;/p&gt;
&lt;p&gt;Recently, I noticed Renovate submit pull requests for dependencies in my &lt;a href=&#34;https://helm.sh/&#34;&gt;Helm&lt;/a&gt; v3 charts.
This gave me an idea.
What if Renovate could automatically manage something like a GitOps repository?
This means organizations would no longer need to tediously query for newer versions of applications.
Instead, they&amp;rsquo;d automatically receive a pull request when an update becomes available.
In this blog post, I demonstrate how to set this up for an &lt;a href=&#34;https://github.com/argoproj/argo-cd/&#34;&gt;ArgoCD&lt;/a&gt; GitOps repository.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
