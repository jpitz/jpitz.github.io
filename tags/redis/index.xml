<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on Mya Pitzeruse</title>
    <link>https://mjpitz.com/tags/redis/</link>
    <description>Recent content in redis on Mya Pitzeruse</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mjpitz.com/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploring Redis High Availability</title>
      <link>https://mjpitz.com/blog/2021/04/22/ha-redis/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mjpitz.com/blog/2021/04/22/ha-redis/</guid>
      <description>&lt;p&gt;Recently, I&amp;rsquo;ve found myself using &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt; for more of the projects that I work on.
Redis can be used in a variety of ways.
It provides functionality for queueing, set operations, bitmaps, streams, and so much more.
Yet, most of my experience with Redis has been as a best-effort cache.
Since it&amp;rsquo;s become a staple in my development, I figured it would be good to brush up on its operations.&lt;/p&gt;
&lt;p&gt;In this post, I dive into the variety of ways Redis can be deployed.
I&amp;rsquo;ll cover the benefits, tradeoffs, and even some uses for each deployment.
Finally, I&amp;rsquo;ll describe the deployment that I recently put together.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
